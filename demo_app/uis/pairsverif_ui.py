# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pairsverif.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_PairsVerifForm(object):
    def setupUi(self, PairsVerifForm):
        PairsVerifForm.setObjectName("PairsVerifForm")
        PairsVerifForm.resize(1100, 850)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(PairsVerifForm.sizePolicy().hasHeightForWidth())
        PairsVerifForm.setSizePolicy(sizePolicy)
        PairsVerifForm.setMinimumSize(QtCore.QSize(1100, 850))
        PairsVerifForm.setMaximumSize(QtCore.QSize(1100, 850))
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(PairsVerifForm)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.workingspace = QtWidgets.QFrame(PairsVerifForm)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.workingspace.sizePolicy().hasHeightForWidth())
        self.workingspace.setSizePolicy(sizePolicy)
        self.workingspace.setMinimumSize(QtCore.QSize(900, 850))
        self.workingspace.setMaximumSize(QtCore.QSize(900, 850))
        self.workingspace.setStyleSheet("background-color: rgb(35, 33, 40);")
        self.workingspace.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.workingspace.setFrameShadow(QtWidgets.QFrame.Raised)
        self.workingspace.setObjectName("workingspace")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.workingspace)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.buttonspace = QtWidgets.QFrame(self.workingspace)
        self.buttonspace.setMaximumSize(QtCore.QSize(16777215, 150))
        self.buttonspace.setObjectName("buttonspace")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.buttonspace)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.randomHQ = QtWidgets.QPushButton(self.buttonspace)
        self.randomHQ.setMaximumSize(QtCore.QSize(200, 40))
        self.randomHQ.setStyleSheet("border-radius: 10px;color:rgb(255, 255, 255);\n"
"font: 75 10pt \"Georgia\";\n"
"background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0.628821 rgba(105, 85, 163, 255), stop:1 rgba(231, 235, 244, 255));\n"
"")
        self.randomHQ.setObjectName("randomHQ")
        self.horizontalLayout_4.addWidget(self.randomHQ)
        self.randomLQ = QtWidgets.QPushButton(self.buttonspace)
        self.randomLQ.setMaximumSize(QtCore.QSize(200, 40))
        self.randomLQ.setStyleSheet("border-radius: 10px;color:rgb(255, 255, 255);\n"
"font: 75 10pt \"Georgia\";\n"
"background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0.628821 rgba(105, 85, 163, 255), stop:1 rgba(231, 235, 244, 255));")
        self.randomLQ.setObjectName("randomLQ")
        self.horizontalLayout_4.addWidget(self.randomLQ)
        self.apply_pairs_verif_btn = QtWidgets.QPushButton(self.buttonspace)
        self.apply_pairs_verif_btn.setEnabled(False)
        self.apply_pairs_verif_btn.setMaximumSize(QtCore.QSize(200, 40))
        self.apply_pairs_verif_btn.setStyleSheet("background-color: rgb(170, 170, 170);border-radius: 10px;color:rgb(255, 255, 255);\n"
"font: 75 10pt \"Georgia\";")
        self.apply_pairs_verif_btn.setObjectName("apply_pairs_verif_btn")
        self.horizontalLayout_4.addWidget(self.apply_pairs_verif_btn)
        self.verticalLayout.addWidget(self.buttonspace)
        self.imagespace = QtWidgets.QFrame(self.workingspace)
        self.imagespace.setObjectName("imagespace")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.imagespace)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.imagespacelayout = QtWidgets.QHBoxLayout()
        self.imagespacelayout.setSpacing(6)
        self.imagespacelayout.setObjectName("imagespacelayout")
        self.horizontalLayout_5.addLayout(self.imagespacelayout)
        self.verticalLayout.addWidget(self.imagespace)
        self.resultspace = QtWidgets.QFrame(self.workingspace)
        self.resultspace.setMinimumSize(QtCore.QSize(900, 200))
        self.resultspace.setMaximumSize(QtCore.QSize(900, 200))
        self.resultspace.setStyleSheet("background-color: rgb(47, 61, 78);")
        self.resultspace.setObjectName("resultspace")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.resultspace)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.result = QtWidgets.QLabel(self.resultspace)
        self.result.setMaximumSize(QtCore.QSize(16777215, 50))
        self.result.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px\n"
"")
        self.result.setAlignment(QtCore.Qt.AlignCenter)
        self.result.setObjectName("result")
        self.verticalLayout_3.addWidget(self.result)
        self.horizontalFrame = QtWidgets.QFrame(self.resultspace)
        self.horizontalFrame.setMaximumSize(QtCore.QSize(16777215, 100))
        self.horizontalFrame.setObjectName("horizontalFrame")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.horizontalFrame)
        self.horizontalLayout_6.setSpacing(0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_3 = QtWidgets.QLabel(self.horizontalFrame)
        self.label_3.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px")
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_6.addWidget(self.label_3)
        self.accuracy = QtWidgets.QLabel(self.horizontalFrame)
        self.accuracy.setMaximumSize(QtCore.QSize(16777215, 50))
        self.accuracy.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px")
        self.accuracy.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.accuracy.setObjectName("accuracy")
        self.horizontalLayout_6.addWidget(self.accuracy)
        self.label_4 = QtWidgets.QLabel(self.horizontalFrame)
        self.label_4.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px")
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_6.addWidget(self.label_4)
        self.threshold = QtWidgets.QLabel(self.horizontalFrame)
        self.threshold.setMaximumSize(QtCore.QSize(16777215, 50))
        self.threshold.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px")
        self.threshold.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.threshold.setObjectName("threshold")
        self.horizontalLayout_6.addWidget(self.threshold)
        self.verticalLayout_3.addWidget(self.horizontalFrame)
        self.verticalLayout.addWidget(self.resultspace)
        self.horizontalLayout_2.addWidget(self.workingspace)
        self.rightmenubar = QtWidgets.QFrame(PairsVerifForm)
        self.rightmenubar.setMinimumSize(QtCore.QSize(200, 850))
        self.rightmenubar.setMaximumSize(QtCore.QSize(200, 850))
        self.rightmenubar.setStyleSheet("background-color: rgb(47, 61, 78);")
        self.rightmenubar.setObjectName("rightmenubar")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.rightmenubar)
        self.verticalLayout_2.setContentsMargins(10, 0, 10, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame_2 = QtWidgets.QFrame(self.rightmenubar)
        self.frame_2.setMaximumSize(QtCore.QSize(200, 80))
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_9 = QtWidgets.QLabel(self.frame_2)
        self.label_9.setMinimumSize(QtCore.QSize(80, 80))
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap(":/icons/images/reglages.png"))
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_3.addWidget(self.label_9)
        self.label_11 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_11.sizePolicy().hasHeightForWidth())
        self.label_11.setSizePolicy(sizePolicy)
        self.label_11.setMinimumSize(QtCore.QSize(120, 80))
        self.label_11.setMaximumSize(QtCore.QSize(120, 80))
        self.label_11.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 14pt \"Georgia\";\n"
"padding-right:20px")
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_3.addWidget(self.label_11)
        self.verticalLayout_2.addWidget(self.frame_2)
        self.recognitionlabem = QtWidgets.QLabel(self.rightmenubar)
        self.recognitionlabem.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px")
        self.recognitionlabem.setAlignment(QtCore.Qt.AlignCenter)
        self.recognitionlabem.setObjectName("recognitionlabem")
        self.verticalLayout_2.addWidget(self.recognitionlabem)
        self.frame_4 = QtWidgets.QFrame(self.rightmenubar)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_2 = QtWidgets.QLabel(self.frame_4)
        self.label_2.setMaximumSize(QtCore.QSize(60, 50))
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.recognitionmodel = QtWidgets.QComboBox(self.frame_4)
        self.recognitionmodel.setEnabled(True)
        self.recognitionmodel.setStyleSheet(" QComboBox {\n"
"        background-color: white;\n"
"        font: 10pt \"Georgia\";\n"
"        padding-bottom: 8px;\n"
"        padding-left: 5px;\n"
"        border-radius: 10px;\n"
"        align:justify\n"
"    }\n"
"    \n"
"    QComboBox::down-arrow {\n"
"        subcontrol-origin: padding;\n"
"        subcontrol-position: bottom right;\n"
"        border-radius: 10px;\n"
"        text-align: center;\n"
"        image: url(:/icons/images/fleche-vers-le-bas.png);\n"
"        border:none\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView {\n"
"        background-color: white;\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView::item:hover {\n"
"        background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 rgba(90, 255, 231, 255), stop:1 rgba(21, 205, 202, 255));\n"
"        color: white;\n"
"    }")
        self.recognitionmodel.setObjectName("recognitionmodel")
        self.recognitionmodel.addItem("")
        self.recognitionmodel.addItem("")
        self.recognitionmodel.addItem("")
        self.horizontalLayout.addWidget(self.recognitionmodel)
        self.verticalLayout_2.addWidget(self.frame_4)
        self.label_10 = QtWidgets.QLabel(self.rightmenubar)
        self.label_10.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px")
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.verticalLayout_2.addWidget(self.label_10)
        self.classic_checkbox = QtWidgets.QCheckBox(self.rightmenubar)
        self.classic_checkbox.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px")
        self.classic_checkbox.setObjectName("classic_checkbox")
        self.verticalLayout_2.addWidget(self.classic_checkbox)
        self.rest_model_classic = QtWidgets.QComboBox(self.rightmenubar)
        self.rest_model_classic.setEnabled(False)
        self.rest_model_classic.setStyleSheet(" QComboBox {\n"
"        background-color: white;\n"
"        font: 10pt \"Georgia\";\n"
"        padding-bottom: 8px;\n"
"        padding-left: 5px;\n"
"        border-radius: 10px;\n"
"        align:justify\n"
"    }\n"
"    \n"
"    QComboBox::down-arrow {\n"
"        subcontrol-origin: padding;\n"
"        subcontrol-position: bottom right;\n"
"        border-radius: 10px;\n"
"        text-align: center;\n"
"image: url(:/icons/images/fleche-vers-le-bas.png);\n"
"        border:none\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView {\n"
"        background-color: white;\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView::item:hover {\n"
"        background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 rgba(90, 255, 231, 255), stop:1 rgba(21, 205, 202, 255));\n"
"        color: white;\n"
"    }")
        self.rest_model_classic.setObjectName("rest_model_classic")
        self.rest_model_classic.addItem("")
        self.rest_model_classic.addItem("")
        self.rest_model_classic.addItem("")
        self.verticalLayout_2.addWidget(self.rest_model_classic)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.advancedwidget = QtWidgets.QWidget(self.rightmenubar)
        self.advancedwidget.setObjectName("advancedwidget")
        self.advancedlayout = QtWidgets.QVBoxLayout(self.advancedwidget)
        self.advancedlayout.setObjectName("advancedlayout")
        self.advancedcheckbox = QtWidgets.QCheckBox(self.advancedwidget)
        self.advancedcheckbox.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px")
        self.advancedcheckbox.setObjectName("advancedcheckbox")
        self.advancedlayout.addWidget(self.advancedcheckbox)
        self.typefusioncombobox = QtWidgets.QComboBox(self.advancedwidget)
        self.typefusioncombobox.setEnabled(False)
        self.typefusioncombobox.setStyleSheet(" QComboBox {\n"
"        background-color: white;\n"
"        font: 10pt \"Georgia\";\n"
"        padding-bottom: 8px;\n"
"        padding-left: 5px;\n"
"        border-radius: 10px;\n"
"        align:justify\n"
"    }\n"
"    \n"
"    QComboBox::down-arrow {\n"
"        subcontrol-origin: padding;\n"
"        subcontrol-position: bottom right;\n"
"        border-radius: 10px;\n"
"        text-align: center;\n"
"image: url(:/icons/images/fleche-vers-le-bas.png);\n"
"        border:none\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView {\n"
"        background-color: white;\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView::item:hover {\n"
"        background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 rgba(90, 255, 231, 255), stop:1 rgba(21, 205, 202, 255));\n"
"        color: white;\n"
"    }\n"
"")
        self.typefusioncombobox.setObjectName("typefusioncombobox")
        self.typefusioncombobox.addItem("")
        self.typefusioncombobox.addItem("")
        self.typefusioncombobox.addItem("")
        self.advancedlayout.addWidget(self.typefusioncombobox)
        self.label = QtWidgets.QLabel(self.advancedwidget)
        self.label.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 11pt \"Georgia\";\n"
"padding-top:20px")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.advancedlayout.addWidget(self.label)
        self.frame_3 = QtWidgets.QFrame(self.advancedwidget)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_10.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_12 = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_12.sizePolicy().hasHeightForWidth())
        self.label_12.setSizePolicy(sizePolicy)
        self.label_12.setMaximumSize(QtCore.QSize(60, 50))
        self.label_12.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_12.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_10.addWidget(self.label_12)
        self.featurelevelcombobox = QtWidgets.QComboBox(self.frame_3)
        self.featurelevelcombobox.setEnabled(False)
        self.featurelevelcombobox.setStyleSheet(" QComboBox {\n"
"        background-color: white;\n"
"        font: 10pt \"Georgia\";\n"
"        padding-bottom: 8px;\n"
"        padding-left: 5px;\n"
"        border-radius: 10px;\n"
"        align:justify\n"
"    }\n"
"    \n"
"    QComboBox::down-arrow {\n"
"        subcontrol-origin: padding;\n"
"        subcontrol-position: bottom right;\n"
"        border-radius: 10px;\n"
"        text-align: center;\n"
"image: url(:/icons/images/fleche-vers-le-bas.png);\n"
"        border:none\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView {\n"
"        background-color: white;\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView::item:hover {\n"
"        background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 rgba(90, 255, 231, 255), stop:1 rgba(21, 205, 202, 255));\n"
"        color: white;\n"
"    }")
        self.featurelevelcombobox.setObjectName("featurelevelcombobox")
        self.featurelevelcombobox.addItem("")
        self.featurelevelcombobox.addItem("")
        self.featurelevelcombobox.addItem("")
        self.featurelevelcombobox.addItem("")
        self.horizontalLayout_10.addWidget(self.featurelevelcombobox)
        self.advancedlayout.addWidget(self.frame_3)
        self.scorelevellabel = QtWidgets.QLabel(self.advancedwidget)
        self.scorelevellabel.setStyleSheet("background-color: \"transparent\";\n"
"color: rgb(255, 255, 255);\n"
"font: 12pt \"Georgia\";\n"
"padding-top:20px\n"
"")
        self.scorelevellabel.setAlignment(QtCore.Qt.AlignCenter)
        self.scorelevellabel.setObjectName("scorelevellabel")
        self.advancedlayout.addWidget(self.scorelevellabel)
        self.scorelev = QtWidgets.QFrame(self.advancedwidget)
        self.scorelev.setObjectName("scorelev")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout(self.scorelev)
        self.horizontalLayout_14.setContentsMargins(0, -1, 0, -1)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.label_17 = QtWidgets.QLabel(self.scorelev)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_17.sizePolicy().hasHeightForWidth())
        self.label_17.setSizePolicy(sizePolicy)
        self.label_17.setMinimumSize(QtCore.QSize(60, 30))
        self.label_17.setMaximumSize(QtCore.QSize(60, 50))
        self.label_17.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_17.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_17.setObjectName("label_17")
        self.horizontalLayout_14.addWidget(self.label_17)
        self.scorelevelcombobox = QtWidgets.QComboBox(self.scorelev)
        self.scorelevelcombobox.setEnabled(False)
        self.scorelevelcombobox.setStyleSheet(" QComboBox {\n"
"        background-color: white;\n"
"        font: 10pt \"Georgia\";\n"
"        padding-bottom: 8px;\n"
"        padding-left: 5px;\n"
"        border-radius: 10px;\n"
"        align:justify\n"
"    }\n"
"    \n"
"    QComboBox::down-arrow {\n"
"        subcontrol-origin: padding;\n"
"        subcontrol-position: bottom right;\n"
"        border-radius: 10px;\n"
"        text-align: center;\n"
"image: url(:/icons/images/fleche-vers-le-bas.png);\n"
"        border:none\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView {\n"
"        background-color: white;\n"
"    }\n"
"    \n"
"    QComboBox QAbstractItemView::item:hover {\n"
"        background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, stop:0 rgba(90, 255, 231, 255), stop:1 rgba(21, 205, 202, 255));\n"
"        color: white;\n"
"    }\n"
"")
        self.scorelevelcombobox.setObjectName("scorelevelcombobox")
        self.scorelevelcombobox.addItem("")
        self.scorelevelcombobox.addItem("")
        self.scorelevelcombobox.addItem("")
        self.horizontalLayout_14.addWidget(self.scorelevelcombobox)
        self.advancedlayout.addWidget(self.scorelev)
        self.verticalLayout_2.addWidget(self.advancedwidget)
        spacerItem1 = QtWidgets.QSpacerItem(20, 150, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout_2.addItem(spacerItem1)
        self.horizontalLayout_2.addWidget(self.rightmenubar)

        self.retranslateUi(PairsVerifForm)
        QtCore.QMetaObject.connectSlotsByName(PairsVerifForm)

    def retranslateUi(self, PairsVerifForm):
        _translate = QtCore.QCoreApplication.translate
        PairsVerifForm.setWindowTitle(_translate("PairsVerifForm", "Form"))
        self.randomHQ.setText(_translate("PairsVerifForm", "random HQ image"))
        self.randomLQ.setText(_translate("PairsVerifForm", "Random LQ image"))
        self.apply_pairs_verif_btn.setText(_translate("PairsVerifForm", "apply"))
        self.result.setText(_translate("PairsVerifForm", "Click Apply! The result will show here"))
        self.label_3.setText(_translate("PairsVerifForm", "Similarity Score"))
        self.accuracy.setText(_translate("PairsVerifForm", "-"))
        self.label_4.setText(_translate("PairsVerifForm", "Threshold:  "))
        self.threshold.setText(_translate("PairsVerifForm", "-"))
        self.label_11.setText(_translate("PairsVerifForm", "Settings"))
        self.recognitionlabem.setText(_translate("PairsVerifForm", "Recognition"))
        self.label_2.setText(_translate("PairsVerifForm", "model"))
        self.recognitionmodel.setItemText(0, _translate("PairsVerifForm", "AdaFace"))
        self.recognitionmodel.setItemText(1, _translate("PairsVerifForm", "MagFace"))
        self.recognitionmodel.setItemText(2, _translate("PairsVerifForm", "ArcFace"))
        self.label_10.setText(_translate("PairsVerifForm", "Restoration"))
        self.classic_checkbox.setText(_translate("PairsVerifForm", "Classical"))
        self.rest_model_classic.setItemText(0, _translate("PairsVerifForm", "GFPGAN"))
        self.rest_model_classic.setItemText(1, _translate("PairsVerifForm", "GPEN"))
        self.rest_model_classic.setItemText(2, _translate("PairsVerifForm", "SGPN"))
        self.advancedcheckbox.setText(_translate("PairsVerifForm", "Advanced"))
        self.typefusioncombobox.setItemText(0, _translate("PairsVerifForm", "feature fusion"))
        self.typefusioncombobox.setItemText(1, _translate("PairsVerifForm", "score fusion"))
        self.typefusioncombobox.setItemText(2, _translate("PairsVerifForm", "hybrid fusion"))
        self.label.setText(_translate("PairsVerifForm", "feature level fusion"))
        self.label_12.setText(_translate("PairsVerifForm", "models"))
        self.featurelevelcombobox.setItemText(0, _translate("PairsVerifForm", "GPEN_SGPN"))
        self.featurelevelcombobox.setItemText(1, _translate("PairsVerifForm", "GPEN_GFPGAN"))
        self.featurelevelcombobox.setItemText(2, _translate("PairsVerifForm", "SGPN_GFPGAN"))
        self.featurelevelcombobox.setItemText(3, _translate("PairsVerifForm", "ALL"))
        self.scorelevellabel.setText(_translate("PairsVerifForm", "score level fusion"))
        self.label_17.setText(_translate("PairsVerifForm", "models"))
        self.scorelevelcombobox.setItemText(0, _translate("PairsVerifForm", "GPEN_GFPGAN"))
        self.scorelevelcombobox.setItemText(1, _translate("PairsVerifForm", "GPEN_SGPN"))
        self.scorelevelcombobox.setItemText(2, _translate("PairsVerifForm", "SGPN_GFPGAN"))
import ressources_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    PairsVerifForm = QtWidgets.QWidget()
    ui = Ui_PairsVerifForm()
    ui.setupUi(PairsVerifForm)
    PairsVerifForm.show()
    sys.exit(app.exec_())
